server {
    listen 80;
    server_name quiz-api.kro.kr;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name quiz-api.kro.kr;

    ssl_certificate     /etc/nginx/ssl/fullchain.cer;
    ssl_certificate_key /etc/nginx/ssl/quiz-api.kro.kr.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # ===== API는 그대로 백엔드 =====
    location /api/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # ✅ 프론트는 "루트"로만 서비스
    # 포인트: 업스트림 경로에 "/simple-quiz-app"를 앞에 붙여 전달
    location = / {
        proxy_pass https://ssafy-quiz-club.github.io/simple-quiz-app/;
        proxy_set_header Host ssafy-quiz-club.github.io;
        proxy_ssl_server_name on;
        proxy_redirect off;

        # HTML은 항상 최신
        proxy_ignore_headers Expires Cache-Control;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # 정적·하위 경로: 클라이언트는 "/assets/…" 등 루트 기준으로 요청
    # 업스트림엔 "/simple-quiz-app$request_uri"로 전달
    location / {
        proxy_pass https://ssafy-quiz-club.github.io/simple-quiz-app$request_uri;
        proxy_set_header Host ssafy-quiz-club.github.io;
        proxy_ssl_server_name on;
        proxy_redirect off;

        # (선택) 해시 자산 장기 캐시
        # if ($request_uri ~* \.(js|css|png|jpg|svg|ico|woff2?)$) {
        #     add_header Cache-Control "public, max-age=31536000, immutable" always;
        # }
    }

    # 🧹 재배포 이전 빌드가 "/simple-quiz-app/…"를 참조하는 경우(과거 HTML 캐시 대비)
    # 그 요청을 루트로 "접두사 제거" 리다이렉트 → 경로 체계 통일
    location ^~ /simple-quiz-app/ {
        return 301 /$uri$is_args$args;
    }
}
